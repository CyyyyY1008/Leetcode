
class Solution {
    public List<List<Integer>> combine(int n, int k) {
        List<List<Integer>> res=new ArrayList<>();
        if (k<=0||n<k) {
            return res;
        }
        Deque<Integer> deque=new LinkedList<>();
        dfs(n,k,1,res,deque);
        return res;
    }
    public void dfs(int n,int k,int index,List<List<Integer>> res,Deque<Integer> deque){
        if(k==deque.size()){
            res.add(new ArrayList<>(deque));
            return;
        }
        for(int i=index;i<=n+1-(k-deque.size());i++){
            deque.addLast(i);
            dfs(n,k,i+1,res,deque);
            deque.removeLast();
        }
    }
}
